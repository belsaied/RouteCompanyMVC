
@model IEnumerable<DepartmentDTO>
@{
    ViewData["Title"] = "Index";
}
<div class="alert alert-success">
    @ViewData["Message"]
</div>
@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    var messageType = TempData["MessageType"] as string ?? "success";
    var headerText = messageType == "success" ? "Success!!" : "Error!!";
    var headerClass = messageType == "success" ? "text-success" : "text-danger";
    var toastClass = messageType == "success" ? "bg-success text-white" : "bg-danger text-white";

    <div aria-live="polite" aria-atomic="true"
         class="toast-container position-fixed p-3"
         style="bottom: 25px; right:25px; z-index: 9999;">
        <div id="notificationToast" class="toast @toastClass" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="5000">
            <div class="toast-header">
                <strong class="me-auto @headerClass">@headerText</strong>
                <small>Just now</small>
                <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["Message"]
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var toastElement = document.getElementById('notificationToast');
            if (toastElement) {
                var toast = new bootstrap.Toast(toastElement);
                toast.show();
            }
        });
    </script>
}
<h1 class="my-3">All Departments</h1>
<br />
<br />
<a class="btn btn-primary" asp-controller="Department" asp-action="Create">Create Department</a>
<br />
@if (Model.Any())
{
    <table class="table table-striped table-hover mt-3">
        <thead class="text-center">
            <tr>
                <th>@Html.DisplayNameFor(d => d.Code)</th>
                <th>@Html.DisplayNameFor(d => d.Name)</th>
                <th>@Html.DisplayNameFor(d => d.Description)</th>
                <th>@Html.DisplayNameFor(d => d.DateOfCreation)</th>
                <th>Details </th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var department in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(d => department.Code)</td>
                    <td>@Html.DisplayFor(d => department.Name)</td>
                    <td>@Html.DisplayFor(d => department.Description)</td>
                    <td>@Html.DisplayFor(d => department.DateOfCreation)</td>
@* 
Render Partial View *@
                     <partial name="_buttonsPartialView" model="department.DeptID"></partial>
                    <td>
                        <a class="btn btn-danger" asp-controller="Department" asp-action="Delete" asp-route-id="@department.DeptID">
                            <i class="fas fa-trash"></i> Delete
                        </a>
@*                         <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#DeleteModal-@department.DeptID">
                            <i class="fas fa-trash"></i>Delete
                        </button> *@
                    </td>

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info mt-3">
        <h2>No Departments Found !!</h2>
    </div>
}


